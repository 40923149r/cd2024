<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>40923149協同產品設計實習</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-06-20T09:09:10+08:00</updated><entry><title>課程w17</title><link href="./2024-Spring-40923149w17-blog-tutorial.html" rel="alternate"></link><published>2024-06-13T00:00:00+08:00</published><updated>2024-06-20T09:09:10+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-06-13:./2024-Spring-40923149w17-blog-tutorial.html</id><summary type="html">&lt;p&gt;協同產品設計實習個人課程實習評量&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習個人課程實習評量&lt;/p&gt;

&lt;h1&gt;任務一:利用 NX1872, 完成可以參與球賽競技的機器人零件與組立件設計&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=axMrxXfTFnM"&gt;robot本體&lt;/a&gt;
&lt;a href="https://drive.google.com/file/d/1_NhC0A_NSuRiXYPBpSRc3XApve0kdRxp/view?usp=drive_link"&gt;檔案&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;任務二:請自選上列項目一中某一零件組立過程, 以 NXOpen Python 程式完成組立&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=6H362IhCU54"&gt;組立影片&lt;/a&gt;
&lt;a href="https://drive.google.com/file/d/13GtG0tqZ0NGy45uPXkIFpCNvjV4jnJOa/view?usp=drive_link"&gt;組立檔&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;任務三:請將所完成的機器人球員放入 CoppeliaSim 運動場景中, 讓球員可以由 ZMQ Remote API 程式控制, 執行後按下 w 鍵後球員可向前移動, 按下 s 後球員可向後移動&lt;/h1&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/lZVi4s_pVwM?si=UDvp1U3-UgCOw2Op" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;任務三是失敗的，但是至少有試過，大致了解步驟是怎麼做的，我也是看同學的影片來操作學習
原因:本體和輪子無法分解成不同物件，重新畫了兩次機器人本體，import機器人進去場景後，變成輪子只有一顆分解成單獨零件，其他三顆輪子還是結合在本體上，所以給軸後，只有一個輪子可作動，因此無法順利移動機器人。這部分要請教老師，同學也請教過了。
6/20解決問題，機器人全部重新畫一遍就可以分解成本體一個和四顆輪子，在過程中，軸建立完成，但是用到程式碼就跑出問題，詢問同學後才發現程式碼少了一串需要修改，之後機器人就可以按w鍵向前移動,按下s鍵後可向後移動。
裝軸影片:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/DkGOp-z0qKQ?si=AtVWxsq45YGkcByj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;程式碼影片:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/bMLsRwtfSwM?si=YFu18IWxvgYh-WVt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;移動成功影片:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/r6oNvjfWkHc?si=p80n_cT36KU7yWfN" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://drive.google.com/file/d/19SUHCqqpwljWVqoYiNlcEegMH8IDFXzi/view?usp=drive_link"&gt;copprliasim檔案&lt;/a&gt;
&lt;a href="https://drive.google.com/file/d/148i7wz2cMkr2LsU6MHyZzeh0afykC3eI/view?usp=sharing"&gt;程式碼檔案&lt;/a&gt;&lt;/p&gt;</content><category term="w17"></category><category term="網誌編寫"></category><category term="任務"></category><category term="實習評量"></category></entry><entry><title>課程w16</title><link href="./2024-Spring-40923149w16-blog-tutorial.html" rel="alternate"></link><published>2024-06-06T00:00:00+08:00</published><updated>2024-06-15T18:33:57+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-06-06:./2024-Spring-40923149w16-blog-tutorial.html</id><summary type="html">&lt;p&gt;協同產品設計實習自評&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習自評&lt;/p&gt;

&lt;h1&gt;這週填寫學期成績自評表&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSduO5lTJtheYfoQEzIJPj8Ub6T7K2VdkTwIarz5_T7Ue1ECCg/viewform"&gt;自評表&lt;/a&gt;
快期末了，有個人的零件要繪製，小組的要合併，接下來就是要合力將期末報告完成&lt;/p&gt;</content><category term="w16"></category><category term="網誌編寫"></category><category term="實習評量自評"></category></entry><entry><title>課程w15</title><link href="./2024-Spring-40923149w15-blog-tutorial.html" rel="alternate"></link><published>2024-05-30T00:00:00+08:00</published><updated>2024-06-19T19:23:04+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-05-30:./2024-Spring-40923149w15-blog-tutorial.html</id><summary type="html">&lt;p&gt;協同產品設計實習鋼球平台&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習鋼球平台&lt;/p&gt;

&lt;h1&gt;鋼球平台與CoppeliaSim&lt;/h1&gt;
&lt;p&gt;鋼球平台我分配到的是y型零件，組合是其他組員組裝和匯入Coppeliasim
&lt;a href="https://nfuedu-my.sharepoint.com/personal/40971219_nfu_edu_tw/_layouts/15/onedrive.aspx?id=%2Fpersonal%2F40971219%5Fnfu%5Fedu%5Ftw%2FDocuments%2FNXopen%2F40923149%2Dy%5Flink%2Epy&amp;amp;parent=%2Fpersonal%2F40971219%5Fnfu%5Fedu%5Ftw%2FDocuments%2FNXopen&amp;amp;ga=1"&gt;y型零件&lt;/a&gt;
&lt;a href="https://www.youtube.com/watch?v=eUgukB0efDI&amp;amp;t=27s"&gt;影片&lt;/a&gt;
結論:nx軟體我還是不太熟悉操作，所以每次錄成python檔都會出很多問題&lt;/p&gt;</content><category term="w15"></category><category term="網誌編寫"></category></entry><entry><title>課程w13</title><link href="./2024-Spring-40923149w13-blog-tutorial.html" rel="alternate"></link><published>2024-05-23T00:00:00+08:00</published><updated>2024-06-19T18:55:33+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-05-23:./2024-Spring-40923149w13-blog-tutorial.html</id><summary type="html">&lt;p&gt;協同產品設計實習評分項目&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習評分項目&lt;/p&gt;

&lt;h1&gt;個人cd2024與分組倉儲的建立及維護&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://40923149r.github.io/cd2024/content/index.html"&gt;個人倉儲&lt;/a&gt;
&lt;a href="https://mdecd2024.github.io/2b-midbg6/content/index.html"&gt;g6分組倉儲&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;參考論文閱讀報告PDF檔案&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://drive.google.com/file/d/1fmJXDJaxB3MGGOeL92w_NObclKmPkAHF/view?usp=drive_link"&gt;閱讀報告檔案&lt;/a&gt;我負責的部分是第六章和conclusion結論&lt;/p&gt;
&lt;h1&gt;在各教學影片上填上字幕並嵌入個人網站&lt;/h1&gt;
&lt;p&gt;有兩部&lt;a href="https://40923149r.github.io/cd2024/content/W6.html"&gt;教學影片上字幕&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;w10三項實習任務(建立倉儲與網站連結、PID控制文獻整理、NX平台零組件繪圖)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://40923149r.github.io/cd2024/content/Brython.html"&gt;建立倉儲與網站連結&lt;/a&gt;
&lt;a href="https://40923149r.github.io/cd2024/blog/2024-Spring-40923149w10-blog-tutorial.html"&gt;PID控制文獻整理&lt;/a&gt;
&lt;a href="https://drive.google.com/file/d/1DCf_wWaLMmxTKaWos5FRyQ-J422REuH0/view?usp=sharing"&gt;NX平台零組件繪圖&lt;/a&gt;分組零件我是分配到y_link&lt;/p&gt;
&lt;h1&gt;w12三項實習任務(NXOpen零組件繪製、分組倉儲設為評分倉儲子模組、足球機器人場景模擬)&lt;/h1&gt;
&lt;p&gt;&lt;a href=""&gt;NX零件繪製&lt;/a&gt;
&lt;a href="https://github.com/mdecd2024/2bstud-2bsite"&gt;分組倉儲設為評分倉儲子模組&lt;/a&gt;
&lt;a href=""&gt;足球機器人場景模擬&lt;/a&gt;&lt;/p&gt;</content><category term="w13"></category><category term="網誌編寫"></category><category term="協同產品設計實習評分項目"></category></entry><entry><title>課程w12</title><link href="./2024-Spring-40923149w12-blog-tutorial.html" rel="alternate"></link><published>2024-05-16T00:00:00+08:00</published><updated>2024-06-12T17:37:30+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-05-16:./2024-Spring-40923149w12-blog-tutorial.html</id><summary type="html">&lt;p&gt;協同產品設計實習&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習&lt;/p&gt;

&lt;h1&gt;任務一:NX零件繪製、組立，以NXopen的方式&lt;/h1&gt;
&lt;h1&gt;任務二:將小組倉儲g6設為評分倉儲的子模組&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecd2024/2bstud-2bsite"&gt;2b評分倉儲&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;任務三:遠端跨網路操控足球機器人進行模擬競技&lt;/h1&gt;</content><category term="w12"></category><category term="網誌編寫"></category><category term="任務"></category></entry><entry><title>課程w11</title><link href="./2024-Spring-40923149w11-blog-tutorial.html" rel="alternate"></link><published>2024-05-09T00:00:00+08:00</published><updated>2024-06-12T17:20:07+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-05-09:./2024-Spring-40923149w11-blog-tutorial.html</id><summary type="html">&lt;p&gt;nx繪製-py檔、心得&lt;/p&gt;
</summary><content type="html">&lt;p&gt;nx繪製-py檔、心得&lt;/p&gt;

&lt;p&gt;第二次使用NX，但還是不太會，只能一邊請教同學，分配到的零件也比較簡單，可以順便練習繪製NX
零件上傳，我負責&lt;a href="https://drive.google.com/file/d/1DCf_wWaLMmxTKaWos5FRyQ-J422REuH0/view?usp=sharing"&gt;第五個零件&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;將課程心得上傳至指定網站&lt;/h1&gt;
&lt;p&gt;接下來的工作內容，變得比較複雜，要學會分配工作，再一起協同分工合作。&lt;/p&gt;</content><category term="w11"></category><category term="網誌編寫"></category><category term="nx繪製"></category><category term="課程心得"></category></entry><entry><title>課程w10</title><link href="./2024-Spring-40923149w10-blog-tutorial.html" rel="alternate"></link><published>2024-05-02T00:00:00+08:00</published><updated>2024-05-30T05:40:29+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-05-02:./2024-Spring-40923149w10-blog-tutorial.html</id><summary type="html">&lt;p&gt;協同產品設計實習課程任務&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習課程任務&lt;/p&gt;


&lt;h1&gt;W10&lt;/h1&gt;
&lt;h1&gt;任務一:建立學員的倉儲、網站與分組連結&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://40923149r.github.io/cd2024/content/Brython.html"&gt;2b學員名單&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;任務二:鋼球平衡台PID控制與模擬&lt;/h1&gt;
&lt;p&gt;論文1:Construction and theoretical study&lt;/p&gt;
&lt;p&gt;摘要:本論文探討了利用自動控制理論來穩定動態系統的應用，具體來說是構建一個球平衡平台。透過實體裝置的建構，展示理論並比較物理和計算機模擬結果。論文的主要目的是設計一個能滿足系統需求的控制器，並引入比例-積分-微分（PID）控制器來平衡平台上的球。研究重點在於確定穩定自然不穩定或半穩定系統的限制，並分析理論與實驗結果的差異。論文中所應用的控制方法是線性控制，通過使用標準組件和微控制器，並利用Arduino庫和開源代碼進行編程，以確保裝置能在線性控制範圍內運行。最終，論文比較了理論模擬與實體建構結果，並探討了差異產生的原因 。&lt;/p&gt;
&lt;p&gt;結論:設計和構建性能滿意的球平衡平台：透過僅應用線性控制，可以設計和構建一個性能滿意的球平衡平台。然而，這需要精確的控制設計和輸入數據的準確性與速度。理論模擬與實驗結果的差異：理論模擬與實驗結果的差異主要來自於構建誤差和無法在模擬中預見並模仿的物理因素。例如，在實驗中，增益值（KP和KD）的微小變動會引起系統的不穩定或性能的嚴重下降，這些差異強調了控制器設計的重要性。性能限制：穩定自然不穩定或半穩定系統的性能限制在於狀態調整的靈活性、控制器的限制以及輸入數據收集的準確性與速度。具體到球平衡平台，這些限制表現在伺服電機的角速度、PD控制器設計、Arduino的能力以及觸控面板的解析度等方面。實驗和理論的限制不同，實驗的限制包括時間離散化、計算能力有限和非理想的物理構建參數 。未來工作應著重於改進控制器設計和構建，如使用更強大且反應更精確的伺服電機，以提高系統的性能和穩定性 。&lt;/p&gt;
&lt;p&gt;論文2:A real time control system for balancing a ball on a platform with FPGA parallel implementation&lt;/p&gt;
&lt;p&gt;摘要:本文提出了一種基於PID控制器的新方法，解決了在實時情況下提高平台上球的位置調節精度的科學和實際問題。為平衡平台上的球，開發了傳遞函數，並合成了PID控制器。設計了在FPGA上進行並行計算的PID控制器實現。通過自然仿真驗證了提高球在平台上位置調節精度的方法。&lt;/p&gt;
&lt;p&gt;結論:本文提出了一種新的解決方案，旨在提高平台上球位置實時調節的效率。該解決方案使用了在FPGA上進行並行計算的PID控制器。開發了一個FPGA晶片上兩個獨立參數的並行PID控制器，確保了控制對象的輪廓計算的並行處理，並對調節器的輸出進行了標準化。通過自然仿真驗證了提高球在平台上位置調節精度的方法。所設計的控制器可用於實時控制具有多個控制參數的高速對象。&lt;/p&gt;
&lt;p&gt;論文3:Design and Implementation a Ball Balancing System for Control Theory Course&lt;/p&gt;
&lt;p&gt;摘要:本文主要目的是開發一個球平衡系統，使用微控制器和相關控制算法，通過實時傳感反饋調整梁的角度來保持球在梁上的平衡。由於重力的作用，梁的恒定角度會導致球在軸向方向上滑動。基於閉環實時控制系統和調校參數，系統會調整梁的角度以最小化誤差，即球的實際位置與預期/設置位置之間的距離。在此過程中，製作並比較了三個原型機，尤其是在合理性和成本方面。整個系統可以通過整合伺服電機、距離傳感器、微控制器板和機械平台輕鬆設計。此系統可用於本科學生學習和理解比例-積分-微分（PID）控制的基本原理，並通過微控制器編程實現控制算法。對於不熟悉MATLAB的學生，開發了接口程序以在MATLAB中繪製實時位置曲線。這個簡化系統將作為橋樑，連接理論知識和動手技能，該方法也適用於更複雜的系統。&lt;/p&gt;
&lt;p&gt;結論:本文提出了一種增加球在平台上位置調節效率的新解決方案。該解決方案使用PID控制器及其在FPGA上的並行計算實現單元。開發了一個在一塊FPGA芯片上獨立控制兩個參數的兩並行PID控制器，確保控制對象的輪廓計算並行處理，並對調節器的輸出進行了標準化。通過自然模擬驗證了提高球在平台上位置調節準確性的效果。所設計的控制器可用於實時控制具有多個控制參數的高速對象。&lt;/p&gt;
&lt;p&gt;論文4:Simulation_and_Experimental_Study_of_Ball_Position&lt;/p&gt;
&lt;p&gt;摘要:本研究介紹了一個雙軸平台上的球位置控制的詳細設計和比較，並使用了狀態空間方法。研究提供了三種控制結構的設計和實際比較，分別是PD控制器、狀態空間反饋和狀態空間觀測器與狀態空間反饋。這些方法旨在自動穩定球在平台上的位置並跟踪球的軌跡。研究包括使用牛頓方法推導出的球在平台上的數學模型，以及直流電機位置環路控制。&lt;/p&gt;
&lt;p&gt;結論:本研究通過設計和比較三種不同的控制結構，揭示了雙軸平台上球位置控制的有效方法。PD控制器、狀態空間反饋和狀態空間觀測器與反饋都展示了各自的優勢和應用場景。結果顯示，這些控制方法均能在一定程度上實現球的位置穩定和軌跡跟踪，但其性能取決於控制參數的準確計算和實驗設置的精度。研究強調了創建教育性平台以解釋基本控制系統原理的價值，並為未來學生提供了激勵。&lt;/p&gt;
&lt;p&gt;論文5:Ball_on_the_plate_balancing_control_system&lt;/p&gt;
&lt;p&gt;摘要:《球在板上的平衡控制系統》的研究旨在設計並實現一個能夠平衡球在板上的控制系統。該系統使用電阻觸摸屏來獲取球的位置數據，並通過步進電機調整平台的傾斜角度，以維持球的位置。系統基於AVR微控制器，使用雙環控制迴路，其中外環負責球的位置控制，內環負責平台的傾斜角度控制。實驗結果表明，系統能夠有效地將球穩定在電阻觸摸屏的中央點，即使存在干擾。研究包括控制系統的機械設計和算法開發，並進行了實驗來驗證系統的性能。通過實驗觀察到，控制系統能夠在3秒內將球穩定到目標位置，並且使用的電阻觸摸屏能夠快速且精確地提供球的位置數據。此系統的設計不僅適用於實驗室教學，也可以用於海洋船舶和航空器等需要穩定控制的平台應用。&lt;/p&gt;
&lt;p&gt;結論:本文介紹了一個球在板上的平衡實驗系統的設計和實現。該系統展示了利用雙環控制迴路和PID控制器來保持球在電阻觸摸屏中央位置的能力。實驗結果表明，使用步進電機和電阻觸摸屏的組合，可以在沒有外部計算機的情況下實現穩定控制。這種控制系統的設計對於教育和工業應用都具有重要意義。未來的工作將集中在提高反饋信號的過濾精度，以提升自動控制系統的速度和質量。此外，該系統還可以擴展應用到更複雜的機器人控制，如三自由度的Delta機器人，這些機器人可以廣泛應用於印刷、銑削和裝配線等工業自動化領域。&lt;/p&gt;
&lt;p&gt;論文6:2D Ball Balancer Control using QUARC&lt;/p&gt;
&lt;p&gt;摘要:該文件介紹了如何使用QUARC軟體來控制2D球平衡器。主要目的是通過比例-積分-微分（PID）控制系統來穩定球在平衡板上的位置。實驗涵蓋了從一階原理建模、獲取系統傳遞函數、設計PV和PID補償器以滿足特定時域規格、仿真和實驗驗證控制系統性能的各個步驟。&lt;/p&gt;
&lt;p&gt;結論:該實驗成功設計並實施了2D球平衡器的PID控制系統。以下是主要結果：
1.穩態誤差：測量的穩態誤差接近於零，滿足設計規範。
2.調節時間：系統在約2.5秒內穩定，符合預期的調節時間要求。
3.超調量：超調量保持在合理範圍內，沒有導致任何系統不穩定。
4.伺服角度和電壓：伺服角度在±30度範圍內，電壓在±10V範圍內，沒有發生飽和現象。
5.模擬與實驗一致性：模擬結果與實驗結果高度一致，證明設計方法的有效性。
6.通過這些結果，可以確定PID控制系統成功地穩定了球的位置並滿足所有設計規範。&lt;/p&gt;
&lt;h1&gt;任務三:鋼球平衡台零組件繪圖&lt;/h1&gt;
&lt;p&gt;我繪製的是第五個零件&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category><category term="make 期中自評video"></category></entry><entry><title>課程w7</title><link href="./2024-Spring-40923149w7-blog-tutorial.html" rel="alternate"></link><published>2024-04-18T00:00:00+08:00</published><updated>2024-06-18T05:30:33+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-04-18:./2024-Spring-40923149w7-blog-tutorial.html</id><summary type="html">&lt;p&gt;期中自評影片&lt;/p&gt;
</summary><content type="html">&lt;p&gt;期中自評影片&lt;/p&gt;


&lt;h1&gt;W5&lt;/h1&gt;
&lt;p&gt;製作影片來解說期中考前做了什麼&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/v4Qi2apFZko?si=rIjmt-7ktgjF_1Cg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="w7"></category><category term="網誌編寫"></category><category term="make 期中自評video"></category></entry><entry><title>課程w6</title><link href="./2024-Spring-40923149w6-blog-tutorial.html" rel="alternate"></link><published>2024-04-11T00:00:00+08:00</published><updated>2024-06-18T05:27:43+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-04-11:./2024-Spring-40923149w6-blog-tutorial.html</id><summary type="html">&lt;p&gt;教學影片上字幕(AI生成)&lt;/p&gt;
</summary><content type="html">&lt;p&gt;教學影片上字幕(AI生成)&lt;/p&gt;


&lt;h1&gt;W5&lt;/h1&gt;
&lt;p&gt;我負責的部分是3、6
video3&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/YKJ-Y80hD_8?si=5o8EQUKjZvo1iDl5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;
video6&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/3B5h4ChcHdU?si=aVkvE5qjQ9EBfiqu" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content><category term="w6"></category><category term="網誌編寫"></category><category term="make video"></category></entry><entry><title>課程w5</title><link href="./2024-Spring-40923149w5-blog-tutorial.html" rel="alternate"></link><published>2024-03-28T00:00:00+08:00</published><updated>2024-06-18T05:29:38+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-03-28:./2024-Spring-40923149w5-blog-tutorial.html</id><summary type="html">&lt;p&gt;教學影片上字幕(AI生成)&lt;/p&gt;
</summary><content type="html">&lt;p&gt;教學影片上字幕(AI生成)&lt;/p&gt;


&lt;h1&gt;W5&lt;/h1&gt;
&lt;p&gt;將上課教學影片加上字幕
並在教學影片下方以摘要方式說明該影片的教學重點
我負責的部分是3、6
學習如何使用AI上字幕&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/-XY_8HWiwno?si=Coa0bKZkjhnfzCKA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;</content><category term="w5"></category><category term="網誌編寫"></category><category term="教學影片上字幕"></category></entry><entry><title>課程w4</title><link href="./2024-Spring-40923149w4-blog-tutorial.html" rel="alternate"></link><published>2024-03-21T00:00:00+08:00</published><updated>2024-06-18T05:28:48+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-03-21:./2024-Spring-40923149w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;Latex的使用&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Latex的使用&lt;/p&gt;


&lt;h1&gt;W4&lt;/h1&gt;
&lt;p&gt;使用codespaces維護倉儲內容
學習使用Github Actions編譯LaTeX得到分組pdf報告
完成中翻英報告
在codespaces上傳自己在報告中負責的部分
我負責的部分是第六章和conclusion
心得:第一次使用Latex還不太熟悉，有些指令碼還看不太懂，慢慢學習中&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫"></category><category term="Latex"></category></entry><entry><title>課程w3</title><link href="./2024-Spring-40923149w3-blog-tutorial.html" rel="alternate"></link><published>2024-03-14T12:00:00+08:00</published><updated>2024-04-23T07:39:59+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-03-14:./2024-Spring-40923149w3-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.
w3學習在Replit維護分組倉儲,use LaTex.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.
w3學習在Replit維護分組倉儲,use LaTex.&lt;/p&gt;


&lt;h1&gt;W3&lt;/h1&gt;
&lt;p&gt;將組員的個人倉儲納入分組倉儲成為子模組&lt;/p&gt;
&lt;p&gt;學習在Replit維護分組倉儲&lt;/p&gt;
&lt;p&gt;分配各組員製作英翻中報告的部分&lt;/p&gt;
&lt;p&gt;下載並學習使用LaTeX製作報告&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry><entry><title>課程w2</title><link href="./2024-Spring-40923149w2-blog-tutorial.html" rel="alternate"></link><published>2024-03-07T12:00:00+08:00</published><updated>2024-04-23T07:39:55+08:00</updated><author><name>40923149</name></author><id>tag:None,2024-03-07:./2024-Spring-40923149w2-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.
w2建立分組倉儲，加入第6組團隊&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.
w2建立分組倉儲，加入第6組團隊&lt;/p&gt;


&lt;h1&gt;W2建立分組倉儲&lt;/h1&gt;
&lt;p&gt;建立分組倉儲&lt;/p&gt;
&lt;p&gt;在倉儲新增個人子模組&lt;/p&gt;
&lt;p&gt;學習使用codespaces維護分組網站&lt;/p&gt;
&lt;p&gt;遇到的問題:在整合分組倉儲時，遇到無法合併，問了老師，老師的解決辦法是在指令區打一行指令給予他作動，才能加到分組倉儲&lt;/p&gt;</content><category term="w2"></category><category term="網誌編寫"></category><category term="pelican"></category></entry><entry><title>2024 Spring 課程w1</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-29T12:00:00+08:00</published><updated>2024-02-28T17:03:39+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-29:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.
w1先創倉儲，加入teams團隊，設置網頁、網誌、簡報。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.
w1先創倉儲，加入teams團隊，設置網頁、網誌、簡報。&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category><category term="pelican"></category></entry></feed>